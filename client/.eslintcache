[{"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\index.js":"1","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\App.js":"2","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\store\\UserStore.js":"3","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\store\\DeviceStore.js":"4","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\NavBar.js":"5","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\AppRouter.js":"6","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\http\\userAPI.js":"7","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\routes.js":"8","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\http\\index.js":"9","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\utils\\consts.js":"10","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\DevicePage.js":"11","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Auth.js":"12","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Shop.js":"13","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Basket.js":"14","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Admin.js":"15","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\Pages.js":"16","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\http\\deviceAPI.js":"17","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\BrandBar.js":"18","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\TypeBar.js":"19","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\DeviceList.js":"20","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\modals\\CreateBrand.js":"21","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\modals\\CreateType.js":"22","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\modals\\CreateDevice.js":"23","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\DeviceItem.js":"24"},{"size":439,"mtime":1611946206000,"results":"25","hashOfConfig":"26"},{"size":860,"mtime":1611946206000,"results":"27","hashOfConfig":"26"},{"size":401,"mtime":1611946206000,"results":"28","hashOfConfig":"26"},{"size":1299,"mtime":1648934818834,"results":"29","hashOfConfig":"26"},{"size":1918,"mtime":1649329386902,"results":"30","hashOfConfig":"26"},{"size":795,"mtime":1611946206000,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1611946206000,"results":"32","hashOfConfig":"26"},{"size":774,"mtime":1611946206000,"results":"33","hashOfConfig":"26"},{"size":407,"mtime":1611946206000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611946206000,"results":"35","hashOfConfig":"26"},{"size":1723,"mtime":1649276884291,"results":"36","hashOfConfig":"26"},{"size":3034,"mtime":1649007399912,"results":"37","hashOfConfig":"26"},{"size":1539,"mtime":1649265491635,"results":"38","hashOfConfig":"26"},{"size":146,"mtime":1611946206000,"results":"39","hashOfConfig":"26"},{"size":1569,"mtime":1649276422372,"results":"40","hashOfConfig":"26"},{"size":801,"mtime":1611946206000,"results":"41","hashOfConfig":"26"},{"size":1126,"mtime":1648884568268,"results":"42","hashOfConfig":"26"},{"size":758,"mtime":1649276733759,"results":"43","hashOfConfig":"26"},{"size":802,"mtime":1649276681196,"results":"44","hashOfConfig":"26"},{"size":491,"mtime":1611946206000,"results":"45","hashOfConfig":"26"},{"size":1262,"mtime":1649328416808,"results":"46","hashOfConfig":"26"},{"size":1226,"mtime":1649328414310,"results":"47","hashOfConfig":"26"},{"size":5891,"mtime":1649275606953,"results":"48","hashOfConfig":"26"},{"size":987,"mtime":1649277159690,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1na1pgv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\index.js",[],["107","108"],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\App.js",["109"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\store\\UserStore.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\store\\DeviceStore.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\NavBar.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\AppRouter.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\http\\userAPI.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\routes.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\http\\index.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\utils\\consts.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\DevicePage.js",["110","111"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneDevice} from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={650} height={650} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    \n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 400, height: 650, fontSize: 32, border: '2px solid lightgray'}}\n                    >\n                        <h3 >{device.name} </h3>\n                        <h3>{device.price} $</h3>\n                        <Button variant=\"btn btn-success\">ADD TO CART</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h4 fontsize=\"24\" color=\"green\">SPECIFICATIONS</h4>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: 'transparent', padding: 10}}>\n                        {info.title} {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Auth.js",["112"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 60}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Log in to 3dModelStore' : \"Create an Account\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"email@host.com\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Need an account? <NavLink to={REGISTRATION_ROUTE}>Sign up</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Already have an account? <NavLink to={LOGIN_ROUTE}>Sing in</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Sign In' : 'Sign Up'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Shop.js",["113","114"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 12).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={2}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Basket.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\pages\\Admin.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\Pages.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\http\\deviceAPI.js",["115"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n//export const changeBrand = async (brand) => {\n//    const {data} = await $authHost.put('api/brand', brand)\n //   return data\n//}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\BrandBar.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\TypeBar.js",["116"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                variant=\"btn btn-outline-success\"\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\DeviceList.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\modals\\CreateBrand.js",["117"],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\modals\\CreateType.js",[],"D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\modals\\CreateDevice.js",["118","119"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    ADD MODEL\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle variant=\"btn btn-success\">{device.selectedType.name || \"SELECT CATEGORY\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\" >\n                        <Dropdown.Toggle variant=\"btn btn-success\">{device.selectedBrand.name || \"SELECT SECTION\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Enter model name\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Enter price\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant=\"btn btn-success\"\n                        \n                        onClick={addInfo}\n                    >\n                        ADD NEW PROPERTY\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"property name\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"property description\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Remove\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                \n                <Button variant=\"outline-success btn-block\" onClick={addDevice}>ADD</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\Algoritmika Bootcamp\\3D_models_shop_react\\3D_models_shop_react_final\\client\\src\\components\\DeviceItem.js",["120"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport {useHistory} from \"react-router-dom\"\nimport {DEVICE_ROUTE} from \"../utils/consts\";\n\nconst DeviceItem = ({device}) => {\n    const history = useHistory()\n    return (\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\n            <Card style={{width: 200, cursor: 'pointer'}} border={\"light\"}>\n                <Image width={200} height={200} src={process.env.REACT_APP_API_URL + device.img}/>\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n                    <div></div>\n                    <div className=\"d-flex align-items-center\">\n                        \n                    </div>\n                </div>\n                <div>{device.name}</div>\n            </Card>\n        </Col>\n    );\n};\n\nexport default DeviceItem;\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":19,"column":8,"nodeType":"127","endLine":19,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":15},{"ruleId":"125","severity":1,"message":"133","line":12,"column":8,"nodeType":"127","endLine":12,"endColumn":10,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":26,"column":17,"nodeType":"131","messageId":"132","endLine":26,"endColumn":21},{"ruleId":"125","severity":1,"message":"136","line":23,"column":8,"nodeType":"127","endLine":23,"endColumn":10,"suggestions":"137"},{"ruleId":"125","severity":1,"message":"136","line":30,"column":8,"nodeType":"127","endLine":30,"endColumn":65,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"139","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":18},{"ruleId":"129","severity":1,"message":"140","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"129","severity":1,"message":"141","line":4,"column":22,"nodeType":"131","messageId":"132","endLine":4,"endColumn":32},{"ruleId":"129","severity":1,"message":"142","line":5,"column":36,"nodeType":"131","messageId":"132","endLine":5,"endColumn":48},{"ruleId":"125","severity":1,"message":"136","line":18,"column":8,"nodeType":"127","endLine":18,"endColumn":10,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"144","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":12},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'bigStar' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["148"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["149"],["150"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["151"],"'star' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"156","fix":"160"},"Update the dependencies array to be: [user]",{"range":"161","text":"162"},"Update the dependencies array to be: [id]",{"range":"163","text":"164"},"Update the dependencies array to be: [device]",{"range":"165","text":"166"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"167","text":"168"},{"range":"169","text":"166"},[641,643],"[user]",[457,459],"[id]",[875,877],"[device]",[1108,1165],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]